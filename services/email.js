const nodemailer = require('nodemailer');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
const transporter = nodemailer.createTransport({
    host: process.env.EMAIL_HOST,
    port: process.env.EMAIL_PORT,
    secure: false,
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
    }
});

async function sendLeadEmail(leadData) {
    const {
        phone,
        firstName,
        lastName,
        purpose,
        budget,
        recommendations,
        chatHistory
    } = leadData;
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const purposeText = {
        family: '–°–µ–º–µ–π–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å',
        work: '–î–ª—è —Ä–∞–±–æ—Ç—ã',
        travel: '–î–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
        city: '–ì–æ—Ä–æ–¥—Å–∫–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å'
    }[purpose] || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    const budgetText = budget 
        ? `${(budget.min / 1000000).toFixed(1)} - ${(budget.max / 1000000).toFixed(1)} –º–ª–Ω ‚ÇΩ`
        : '–ù–µ —É–∫–∞–∑–∞–Ω';
    
    const recommendationsText = recommendations
        ? recommendations.map(r => `- ${r.name} (–æ—Ç ${r.price.toLocaleString('ru-RU')} ‚ÇΩ)`).join('\n')
        : '–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π';
    
    // HTML –ø–∏—Å—å–º–æ
    const html = `
        <h2>üöó –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å Telegram –±–æ—Ç–∞</h2>
        
        <h3>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
        <ul>
            <li><strong>–ò–º—è:</strong> ${firstName} ${lastName || ''}</li>
            <li><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</li>
        </ul>
        
        <h3>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–±–æ—Ä–∞:</h3>
        <ul>
            <li><strong>–¶–µ–ª—å –ø–æ–∫—É–ø–∫–∏:</strong> ${purposeText}</li>
            <li><strong>–ë—é–¥–∂–µ—Ç:</strong> ${budgetText}</li>
        </ul>
        
        <h3>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:</h3>
        <pre>${recommendationsText}</pre>
        
        <h3>–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞:</h3>
        <div style="background: #f5f5f5; padding: 10px; border-radius: 5px;">
            ${chatHistory ? chatHistory.slice(-5).map(msg => 
                `<p><strong>${msg.role === 'user' ? '–ö–ª–∏–µ–Ω—Ç' : '–ë–æ—Ç'}:</strong> ${msg.content}</p>`
            ).join('') : '<p>–ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏</p>'}
        </div>
        
        <hr>
        <p><small>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${new Date().toLocaleString('ru-RU')}</small></p>
    `;
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    try {
        await transporter.sendMail({
            from: `"Chery Bot" <${process.env.EMAIL_USER}>`,
            to: process.env.ADMIN_EMAIL,
            subject: `‚ö° –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞: ${firstName} ${phone}`,
            html: html
        });
        
        console.log('Email sent successfully');
        return true;
    } catch (error) {
        console.error('Email sending failed:', error);
        throw error;
    }
}

module.exports = { sendLeadEmail };
